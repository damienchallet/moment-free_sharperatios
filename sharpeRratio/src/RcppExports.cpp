// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// num_records_up
int num_records_up(NumericVector x);
RcppExport SEXP _sharpeRratio_num_records_up(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(num_records_up(x));
    return rcpp_result_gen;
END_RCPP
}
// num_records_down
int num_records_down(NumericVector x);
RcppExport SEXP _sharpeRratio_num_records_down(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(num_records_down(x));
    return rcpp_result_gen;
END_RCPP
}
// computeR0bar
List computeR0bar(NumericVector x, int numPerm, double q1, double q2);
RcppExport SEXP _sharpeRratio_computeR0bar(SEXP xSEXP, SEXP numPermSEXP, SEXP q1SEXP, SEXP q2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type numPerm(numPermSEXP);
    Rcpp::traits::input_parameter< double >::type q1(q1SEXP);
    Rcpp::traits::input_parameter< double >::type q2(q2SEXP);
    rcpp_result_gen = Rcpp::wrap(computeR0bar(x, numPerm, q1, q2));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_sharpeRratio_num_records_up", (DL_FUNC) &_sharpeRratio_num_records_up, 1},
    {"_sharpeRratio_num_records_down", (DL_FUNC) &_sharpeRratio_num_records_down, 1},
    {"_sharpeRratio_computeR0bar", (DL_FUNC) &_sharpeRratio_computeR0bar, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_sharpeRratio(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
